import com.modrinth.minotaur.TaskModrinthUpload

buildscript {
    repositories {
        jcenter()
        gradlePluginPortal()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath 'gradle.plugin.com.modrinth.minotaur:Minotaur:1.1.0'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

String versionClassifier = !VERSION_CLASSIFIER.isEmpty() ? "-" + VERSION_CLASSIFIER : ""
String releaseClassifier = !VERSION_CLASSIFIER.isEmpty() ? VERSION_CLASSIFIER : "release"
version = VERSION_MAJOR + "." + VERSION_MINOR + (VERSION_PATCH != "0" ? "."+VERSION_PATCH : "") + versionClassifier
group = "com.kingrunes.somnia"
archivesBaseName = "somnia"

String versionRaw = version.toString().split("-")[0]

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"

    clientJvmArgs = ["-Dfml.coreMods.load=" + COREMOD_PATH]

    mappings = "snapshot_20171003"
}

repositories {
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name = "CurseMaven"
        url = "https://www.cursemaven.com"
    }
    maven {
        name = "ModMaven"
        url = 'https://maven.mcmoddev.com'
    }
    /*maven {
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven/"
    }*/
}
dependencies {
    deobfCompile "curse.maven:railcraft-51195:2687757"

    deobfCompile "com.azanor:Baubles:${VERSION_BAUBLES}"
    //deobfCompile "curse.maven:cyclic-239286:3089348"
    //deobfCompile "curse.maven:coffee-spawner-257588:2515688"
    //compile "net.industrial-craft:industrialcraft-2:2.8.221-ex112:dev"
    //deobfCompile "mezz.jei:jei_1.12.2:4.16.1.302"
}

jar {
    manifest {
        attributes([
                "Specification-Title": "somnia",
                "Specification-Vendor": "kingrunes",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"kingrunes",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
        attributes 'FMLCorePlugin': COREMOD_PATH, 'FMLCorePluginContainsFMLMod': 'true'
        attributes 'FMLAT': 'somnia_at.cfg'
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def getVersionDisplayName() {
    def name = "Somnia"
    String classifier
    if (!VERSION_CLASSIFIER.isEmpty()) {
        String classifierName = VERSION_CLASSIFIER
        String firstLetter = classifierName.substring(0, 1)
        String remainingLetters = classifierName.substring(1, classifierName.length())
        firstLetter = firstLetter.toUpperCase()
        String[] parts = classifierName.split(".")
        classifier = firstLetter + remainingLetters + (parts.length > 1 ? " ${parts[1]}" : "")
    } else classifier = ""

    return "$name ${version.toString().split("-")[0]} $classifier"
}

curseforge {
    apiKey = System.getenv("CURSEFORGE_TOKEN") ?: project.findProperty("CURSEFORGE_TOKEN") as String ?: "DUMMY"
    project {
        id = CURSEFORGE_ID
        changelogType = "markdown"
        changelog = System.getenv("CHANGELOG") ?: ""
        releaseType = releaseClassifier
        mainArtifact(tasks.getByName("jar"), {
            displayName = getVersionDisplayName()
            relations {
                optionalDependency("openblocks")
                optionalDependency("cyclic")
                optionalDependency("dark-utilities")
                optionalDependency("railcraft")
            }
        })
        addGameVersion("Forge")
        addGameVersion(VERSION_MC)
    }
}

task publishModrinth(type: TaskModrinthUpload) {
    token = System.getenv("MODRINTH_TOKEN") ?: project.findProperty("MODRINTH_TOKEN") as String ?: "DUMMY"
    projectId = "BiSrUr8O"
    versionName = getVersionDisplayName()
    versionNumber = versionRaw
    uploadFile = tasks.getByName("jar")
    addLoader("forge")
    releaseType = releaseClassifier
    changelog = System.getenv("CHANGELOG")
    addGameVersion(VERSION_MC)
}