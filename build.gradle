buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = VERSION_MAJOR+"."+VERSION_MINOR+(Integer.parseInt(VERSION_REVISION) > 0 ? "."+VERSION_REVISION : "")
group = "com.kingrunes.somnia" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "somnia"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"

    clientJvmArgs = ["-Dfml.coreMods.load=" + coremodPath]

    mappings = "snapshot_20171003"
}

repositories {
    maven {
        name = "CurseMaven"
        url = "https://www.cursemaven.com"
    }
    maven {
        name = "ModMaven"
        url = 'https://maven.mcmoddev.com'
    }
}
dependencies {
    deobfCompile "curse.maven:railcraft-51195:2687757"

    deobfCompile "com.azanor:Baubles:${VERSION_BAUBLES}"
    //deobfCompile "curse.maven:cyclic-239286:3089348"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "somnia",
                "Specification-Vendor": "kingrunes",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"kingrunes",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
        attributes 'FMLCorePlugin': coremodPath, 'FMLCorePluginContainsFMLMod': 'true'
        attributes 'FMLAT': 'somnia_at.cfg'
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
